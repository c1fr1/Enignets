package engine.input

import org.lwjgl.glfw.GLFW.*

open class KeyStates {
	private val internalStates = Array(GLFW_KEY_LAST + 1) { KeyState.Up }

	open operator fun get(i : Int) = internalStates[i]

	open fun update(key : Int, action : Int) {
		if (key !in internalStates.indices) return
		internalStates[key] = when (action) {
			GLFW_RELEASE -> KeyState.Released
			GLFW_PRESS -> KeyState.Pressed
			else -> internalStates[key]
		}
	}

	open fun polledInput() {
		for (i in internalStates.indices) {
			internalStates[i] = internalStates[i].next()
		}
	}

	open val kSpace : KeyState get() = internalStates[GLFW_KEY_SPACE]
	open val kApostrophe : KeyState get() = internalStates[GLFW_KEY_APOSTROPHE]
	open val kComma : KeyState get() = internalStates[GLFW_KEY_COMMA]
	open val kMinus : KeyState get() = internalStates[GLFW_KEY_MINUS]
	open val kPeriod : KeyState get() = internalStates[GLFW_KEY_PERIOD]
	open val kSlash : KeyState get() = internalStates[GLFW_KEY_SLASH]
	open val k0 : KeyState get() = internalStates[GLFW_KEY_0]
	open val k1 : KeyState get() = internalStates[GLFW_KEY_1]
	open val k2 : KeyState get() = internalStates[GLFW_KEY_2]
	open val k3 : KeyState get() = internalStates[GLFW_KEY_3]
	open val k4 : KeyState get() = internalStates[GLFW_KEY_4]
	open val k5 : KeyState get() = internalStates[GLFW_KEY_5]
	open val k6 : KeyState get() = internalStates[GLFW_KEY_6]
	open val k7 : KeyState get() = internalStates[GLFW_KEY_7]
	open val k8 : KeyState get() = internalStates[GLFW_KEY_8]
	open val k9 : KeyState get() = internalStates[GLFW_KEY_9]
	open val kSemicolon : KeyState get() = internalStates[GLFW_KEY_SEMICOLON]
	open val kEqual : KeyState get() = internalStates[GLFW_KEY_EQUAL]
	open val kA : KeyState get() = internalStates[GLFW_KEY_A]
	open val kB : KeyState get() = internalStates[GLFW_KEY_B]
	open val kC : KeyState get() = internalStates[GLFW_KEY_C]
	open val kD : KeyState get() = internalStates[GLFW_KEY_D]
	open val kE : KeyState get() = internalStates[GLFW_KEY_E]
	open val kF : KeyState get() = internalStates[GLFW_KEY_F]
	open val kG : KeyState get() = internalStates[GLFW_KEY_G]
	open val kH : KeyState get() = internalStates[GLFW_KEY_H]
	open val kI : KeyState get() = internalStates[GLFW_KEY_I]
	open val kJ : KeyState get() = internalStates[GLFW_KEY_J]
	open val kK : KeyState get() = internalStates[GLFW_KEY_K]
	open val kL : KeyState get() = internalStates[GLFW_KEY_L]
	open val kM : KeyState get() = internalStates[GLFW_KEY_M]
	open val kN : KeyState get() = internalStates[GLFW_KEY_N]
	open val kO : KeyState get() = internalStates[GLFW_KEY_O]
	open val kP : KeyState get() = internalStates[GLFW_KEY_P]
	open val kQ : KeyState get() = internalStates[GLFW_KEY_Q]
	open val kR : KeyState get() = internalStates[GLFW_KEY_R]
	open val kS : KeyState get() = internalStates[GLFW_KEY_S]
	open val kT : KeyState get() = internalStates[GLFW_KEY_T]
	open val kU : KeyState get() = internalStates[GLFW_KEY_U]
	open val kV : KeyState get() = internalStates[GLFW_KEY_V]
	open val kW : KeyState get() = internalStates[GLFW_KEY_W]
	open val kX : KeyState get() = internalStates[GLFW_KEY_X]
	open val kY : KeyState get() = internalStates[GLFW_KEY_Y]
	open val kZ : KeyState get() = internalStates[GLFW_KEY_Z]
	open val kLeftBracket : KeyState get() = internalStates[GLFW_KEY_LEFT_BRACKET]
	open val kBackslash : KeyState get() = internalStates[GLFW_KEY_BACKSLASH]
	open val kRightBracket : KeyState get() = internalStates[GLFW_KEY_RIGHT_BRACKET]
	open val kGraveAccent : KeyState get() = internalStates[GLFW_KEY_GRAVE_ACCENT]
	open val kWorld1 : KeyState get() = internalStates[GLFW_KEY_WORLD_1]
	open val kWorld2 : KeyState get() = internalStates[GLFW_KEY_WORLD_2]

	open val kEscape : KeyState get() = internalStates[GLFW_KEY_ESCAPE]
	open val kEnter : KeyState get() = internalStates[GLFW_KEY_ENTER]
	open val kTab : KeyState get() = internalStates[GLFW_KEY_TAB]
	open val kBackspace : KeyState get() = internalStates[GLFW_KEY_BACKSPACE]
	open val kInsert : KeyState get() = internalStates[GLFW_KEY_INSERT]
	open val kDelete : KeyState get() = internalStates[GLFW_KEY_DELETE]
	open val kRight : KeyState get() = internalStates[GLFW_KEY_RIGHT]
	open val kLeft : KeyState get() = internalStates[GLFW_KEY_LEFT]
	open val kDown : KeyState get() = internalStates[GLFW_KEY_DOWN]
	open val kUp : KeyState get() = internalStates[GLFW_KEY_UP]
	open val kPageUp : KeyState get() = internalStates[GLFW_KEY_PAGE_UP]
	open val kPageDown : KeyState get() = internalStates[GLFW_KEY_PAGE_DOWN]
	open val kHome : KeyState get() = internalStates[GLFW_KEY_HOME]
	open val kEnd : KeyState get() = internalStates[GLFW_KEY_END]
	open val kCapsLock : KeyState get() = internalStates[GLFW_KEY_CAPS_LOCK]
	open val kScrollLock : KeyState get() = internalStates[GLFW_KEY_SCROLL_LOCK]
	open val kNumLock : KeyState get() = internalStates[GLFW_KEY_NUM_LOCK]
	open val kPrintScreen : KeyState get() = internalStates[GLFW_KEY_PRINT_SCREEN]
	open val kPause : KeyState get() = internalStates[GLFW_KEY_PAUSE]
	open val kF1 : KeyState get() = internalStates[GLFW_KEY_F1]
	open val kF2 : KeyState get() = internalStates[GLFW_KEY_F2]
	open val kF3 : KeyState get() = internalStates[GLFW_KEY_F3]
	open val kF4 : KeyState get() = internalStates[GLFW_KEY_F4]
	open val kF5 : KeyState get() = internalStates[GLFW_KEY_F5]
	open val kF6 : KeyState get() = internalStates[GLFW_KEY_F6]
	open val kF7 : KeyState get() = internalStates[GLFW_KEY_F7]
	open val kF8 : KeyState get() = internalStates[GLFW_KEY_F8]
	open val kF9 : KeyState get() = internalStates[GLFW_KEY_F9]
	open val kF10 : KeyState get() = internalStates[GLFW_KEY_F10]
	open val kF11 : KeyState get() = internalStates[GLFW_KEY_F11]
	open val kF12 : KeyState get() = internalStates[GLFW_KEY_F12]
	open val kF13 : KeyState get() = internalStates[GLFW_KEY_F13]
	open val kF14 : KeyState get() = internalStates[GLFW_KEY_F14]
	open val kF15 : KeyState get() = internalStates[GLFW_KEY_F15]
	open val kF16 : KeyState get() = internalStates[GLFW_KEY_F16]
	open val kF17 : KeyState get() = internalStates[GLFW_KEY_F17]
	open val kF18 : KeyState get() = internalStates[GLFW_KEY_F18]
	open val kF19 : KeyState get() = internalStates[GLFW_KEY_F19]
	open val kF20 : KeyState get() = internalStates[GLFW_KEY_F20]
	open val kF21 : KeyState get() = internalStates[GLFW_KEY_F21]
	open val kF22 : KeyState get() = internalStates[GLFW_KEY_F22]
	open val kF23 : KeyState get() = internalStates[GLFW_KEY_F23]
	open val kF24 : KeyState get() = internalStates[GLFW_KEY_F24]
	open val kF25 : KeyState get() = internalStates[GLFW_KEY_F25]
	open val kNumPad0 : KeyState get() = internalStates[GLFW_KEY_KP_0]
	open val kNumPad1 : KeyState get() = internalStates[GLFW_KEY_KP_1]
	open val kNumPad2 : KeyState get() = internalStates[GLFW_KEY_KP_2]
	open val kNumPad3 : KeyState get() = internalStates[GLFW_KEY_KP_3]
	open val kNumPad4 : KeyState get() = internalStates[GLFW_KEY_KP_4]
	open val kNumPad5 : KeyState get() = internalStates[GLFW_KEY_KP_5]
	open val kNumPad6 : KeyState get() = internalStates[GLFW_KEY_KP_6]
	open val kNumPad7 : KeyState get() = internalStates[GLFW_KEY_KP_7]
	open val kNumPad8 : KeyState get() = internalStates[GLFW_KEY_KP_8]
	open val kNumPad9 : KeyState get() = internalStates[GLFW_KEY_KP_9]
	open val kNumPadDecimal : KeyState get() = internalStates[GLFW_KEY_KP_DECIMAL]
	open val kNumPadDivide : KeyState get() = internalStates[GLFW_KEY_KP_DIVIDE]
	open val kNumPadMultiply : KeyState get() = internalStates[GLFW_KEY_KP_MULTIPLY]
	open val kNumPadSubtract : KeyState get() = internalStates[GLFW_KEY_KP_SUBTRACT]
	open val kNumPadAdd : KeyState get() = internalStates[GLFW_KEY_KP_ADD]
	open val kNumPadEnter : KeyState get() = internalStates[GLFW_KEY_KP_ENTER]
	open val kNumPadEqual : KeyState get() = internalStates[GLFW_KEY_KP_EQUAL]
	open val kLeftShift : KeyState get() = internalStates[GLFW_KEY_LEFT_SHIFT]
	open val kLeftControl : KeyState get() = internalStates[GLFW_KEY_LEFT_CONTROL]
	open val kLeftAlt : KeyState get() = internalStates[GLFW_KEY_LEFT_ALT]
	open val kLeftSuper : KeyState get() = internalStates[GLFW_KEY_LEFT_SUPER]
	open val kRightShift : KeyState get() = internalStates[GLFW_KEY_RIGHT_SHIFT]
	open val kRightControl : KeyState get() = internalStates[GLFW_KEY_RIGHT_CONTROL]
	open val kRightAlt : KeyState get() = internalStates[GLFW_KEY_RIGHT_ALT]
	open val kRightSuper : KeyState get() = internalStates[GLFW_KEY_RIGHT_SUPER]
	open val kMenu : KeyState get() = internalStates[GLFW_KEY_MENU]
}